version: '3.7'

services:
    php:
        image: todo:php-fpm-alpine
        build:
            args:
                user: ${HOST_USERNAME}
                uid: ${HOST_UID}
            context: ./php
            dockerfile: Dockerfile
        container_name: ${COMPOSE_PROJECT_NAME}-php
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ../:/var/www
        networks:
            - application-network
    
    cron:
        build:
            context: ./cron
            dockerfile: Dockerfile
        container_name: ${COMPOSE_PROJECT_NAME}-cron
        restart: unless-stopped
        working_dir: /var/log/cron
        volumes:
            - ../:/var/www
        networks:
            - application-network

    db:
        image: mariadb:latest
        container_name: ${COMPOSE_PROJECT_NAME}-db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: todo
            MYSQL_ROOT_PASSWORD: root
            MYSQL_PASSWORD: root
            MYSQL_USER: root
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - db:/var/lib/mysql
        networks:
            - application-network

    nginx:
        image: nginx:1.17-alpine
        container_name: ${COMPOSE_PROJECT_NAME}-nginx
        restart: unless-stopped
        environment:
            - VIRTUAL_HOST=${HOST_NAME}
            - VIRTUAL_PORT=80
        ports:
            - 8002:80
        volumes:
            - ../:/var/www
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        networks:
            - application-network

    phpmyadmin:
        image: phpmyadmin:latest
        container_name: ${COMPOSE_PROJECT_NAME}-phpmyadmin
        restart: unless-stopped
        environment:
            - PMA_HOST=db
            - PMA_USER=root
            - PMA_PASSWORD=root
            - VIRTUAL_HOST=${PMA_HOST_NAME}
            - VIRTUAL_PORT=80
        depends_on:
            - db
        networks:
            - application-network

    mailhog:
        image: mailhog/mailhog
        container_name: ${COMPOSE_PROJECT_NAME}-mailhog
        restart: unless-stopped
        environment:
            - VIRTUAL_HOST=${MAILHOG_HOST_NAME}
            - VIRTUAL_PORT=8025
        networks:
            - application-network
    
volumes:
    db:
        driver: local
networks:
    application-network:
        external:
            name: ${COMPOSE_PROJECT_NAME}-network